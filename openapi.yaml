openapi: 3.0.3
info:
  title: Courses Service
  version: 1.0.0
servers:
  - url: http://localhost:3000
paths:
  /healthz:
    get:
      summary: Liveness probe
      responses:
        '200': { description: OK }
  /readyz:
    get:
      summary: Readiness probe
      responses:
        '200':
          description: READY
          content:
            text/plain:
              example: "READY"
        '500':
          description: NOT READY
          content:
            text/plain:
              example: "NOT READY"
  /api/courses:
    get:
      summary: List courses
      responses:
        '200':
          description: Courses
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/Course' }
              examples:
                success:
                  value:
                    - id: "550e8400-e29b-41d4-a716-446655440000"
                      name: "Introduction to Programming"
                      created_at: "2025-01-15T10:30:00Z"
                    - id: "660e8400-e29b-41d4-a716-446655440001"
                      name: "Advanced Web Development"
                      created_at: "2025-01-16T14:20:00Z"
    post:
      summary: Create course
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name]
              properties:
                name: { type: string }
            examples:
              createCourse:
                value:
                  name: "Introduction to Programming"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema: { $ref: '#/components/schemas/Course' }
              examples:
                created:
                  value:
                    id: "550e8400-e29b-41d4-a716-446655440000"
                    name: "Introduction to Programming"
                    created_at: "2025-01-15T10:30:00Z"
        '400':
          description: Validation error
          content:
            application/json:
              schema: { $ref: '#/components/schemas/Error' }
              examples:
                missingName:
                  value:
                    error: "Name is required!"
  /api/courses/{courseId}/lectures:
    get:
      summary: List lectures for a course
      parameters:
        - in: path
          name: courseId
          required: true
          schema: { type: string, format: uuid }
          example: "550e8400-e29b-41d4-a716-446655440000"
      responses:
        '200':
          description: Lectures
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/Lecture' }
              examples:
                success:
                  value:
                    - id: "770e8400-e29b-41d4-a716-446655440010"
                      course_id: "550e8400-e29b-41d4-a716-446655440000"
                      title: "Getting Started with Variables"
                      manifest_url: "https://example.com/videos/lecture1.m3u8"
                      created_at: "2025-01-15T11:00:00Z"
                    - id: "880e8400-e29b-41d4-a716-446655440011"
                      course_id: "550e8400-e29b-41d4-a716-446655440000"
                      title: "Control Flow and Loops"
                      manifest_url: null
                      created_at: "2025-01-15T12:30:00Z"
    post:
      summary: Create lecture for a course
      parameters:
        - in: path
          name: courseId
          required: true
          schema: { type: string, format: uuid }
          example: "550e8400-e29b-41d4-a716-446655440000"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [title]
              properties:
                title: { type: string }
                manifest_url: { type: string, nullable: true }
            examples:
              createLecture:
                value:
                  title: "Getting Started with Variables"
                  manifest_url: "https://example.com/videos/lecture1.m3u8"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema: { $ref: '#/components/schemas/Lecture' }
              examples:
                created:
                  value:
                    id: "770e8400-e29b-41d4-a716-446655440010"
                    course_id: "550e8400-e29b-41d4-a716-446655440000"
                    title: "Getting Started with Variables"
                    manifest_url: "https://example.com/videos/lecture1.m3u8"
                    created_at: "2025-01-15T11:00:00Z"
        '400':
          description: Validation error
          content:
            application/json:
              schema: { $ref: '#/components/schemas/Error' }
              examples:
                missingTitle:
                  value:
                    error: "Title is required!"
components:
  schemas:
    Course:
      type: object
      properties:
        id: { type: string, format: uuid }
        name: { type: string }
        created_at: { type: string, format: date-time }
    Lecture:
      type: object
      properties:
        id: { type: string, format: uuid }
        course_id: { type: string, format: uuid }
        title: { type: string }
        manifest_url: { type: string, nullable: true }
        created_at: { type: string, format: date-time }
    Error:
      type: object
      properties:
        error: { type: string }
      example:
        error: "An error occurred"