openapi: 3.0.3
info:
  title: Courses Service
  version: 1.0.0
servers:
  - url: http://localhost:3000
paths:
  /healthz:
    get:
      summary: Liveness probe
      responses:
        '200': { description: OK }
  /readyz:
    get:
      summary: Readiness probe
      responses:
        '200': { description: READY }
        '500': { description: NOT READY }
  /api/courses:
    get:
      summary: List courses
      responses:
        '200':
          description: Courses
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/Course' }
    post:
      summary: Create course
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name]
              properties:
                name: { type: string }
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema: { $ref: '#/components/schemas/Course' }
        '400': { description: Validation error }
  /api/courses/{courseId}/lectures:
    get:
      summary: List lectures for a course
      parameters:
        - in: path
          name: courseId
          required: true
          schema: { type: string, format: uuid }
      responses:
        '200':
          description: Lectures
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/Lecture' }
    post:
      summary: Create lecture for a course
      parameters:
        - in: path
          name: courseId
          required: true
          schema: { type: string, format: uuid }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [title]
              properties:
                title: { type: string }
                manifest_url: { type: string, nullable: true }
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema: { $ref: '#/components/schemas/Lecture' }
        '400': { description: Validation error }
components:
  schemas:
    Course:
      type: object
      properties:
        id: { type: string, format: uuid }
        name: { type: string }
        created_at: { type: string, format: date-time }
    Lecture:
      type: object
      properties:
        id: { type: string, format: uuid }
        course_id: { type: string, format: uuid }
        title: { type: string }
        manifest_url: { type: string, nullable: true }
        created_at: { type: string, format: date-time }